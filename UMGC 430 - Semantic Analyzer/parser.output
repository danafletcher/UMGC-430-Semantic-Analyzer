Nonterminals useless in grammar

    optional_variable_


Terminals unused in grammar

    TYPE
    ENDCASE


Rules useless in grammar

   62 optional_variable_: optional_variable
   63                   | error ';'


Grammar

    0 $accept: function $end

    1 function: function_header optional_variable body ';'

    2 function_header: FUNCTION IDENTIFIER optional_parameter RETURNS type ';'

    3 type: INTEGER
    4     | CHARACTER
    5     | REAL

    6 optional_variable: optional_variable variable
    7                  | ε

    8 variable: IDENTIFIER ':' type IS statement ';'
    9         | IDENTIFIER ':' LIST OF type IS list ';'

   10 list: '(' expressions ')'

   11 expressions: expressions ',' expression
   12            | expression

   13 optional_parameter: parameters
   14                   | ε

   15 parameters: parameters ',' parameter
   16           | parameter

   17 parameter: IDENTIFIER ':' type

   18 body: BEGIN_ statement_ END

   19 statement_: statement ';'
   20           | error ';'

   21 statement: expression
   22          | WHEN or_condition ',' expression ':' expression
   23          | SWITCH expression IS cases OTHERS ARROW statement ';' ENDSWITCH
   24          | IF or_condition THEN statement_ elsif_clauses ELSE statement_ ENDIF
   25          | FOLD direction operator list_choice ENDFOLD

   26 elsif_clauses: elsif_clauses elsif_clause
   27              | ε

   28 elsif_clause: ELSIF or_condition THEN statement_

   29 cases: cases case
   30      | ε

   31 case: CASE INT_LITERAL ARROW statement ';'

   32 direction: LEFT
   33          | RIGHT

   34 operator: ADDOP
   35         | MULOP
   36         | EXPOP

   37 list_choice: list
   38            | IDENTIFIER

   39 or_condition: or_condition OROP condition
   40             | condition

   41 condition: condition ANDOP not_condition
   42          | not_condition

   43 not_condition: NOTOP relation
   44              | relation

   45 relation: '(' or_condition ')'
   46         | expression RELOP expression

   47 expression: expression ADDOP term
   48           | term

   49 term: term REMOP exp_term
   50     | term MULOP exp_term
   51     | exp_term

   52 exp_term: neg_term EXPOP exp_term
   53         | neg_term

   54 neg_term: NEGOP primary
   55         | primary

   56 primary: '(' expression ')'
   57        | INT_LITERAL
   58        | CHAR_LITERAL
   59        | REAL_LITERAL
   60        | IDENTIFIER '(' expression ')'
   61        | IDENTIFIER


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 10 45 56 60
    ')' (41) 10 45 56 60
    ',' (44) 11 15 22
    ':' (58) 8 9 17 22
    ';' (59) 1 2 8 9 19 20 23 31
    error (256) 20
    IDENTIFIER <iden> (258) 2 8 9 17 38 60 61
    TYPE (259)
    INT_LITERAL <value> (260) 31 57
    CHAR_LITERAL <value> (261) 58
    REAL_LITERAL <value> (262) 59
    ADDOP <oper> (263) 34 47
    MULOP <oper> (264) 35 50
    ANDOP <oper> (265) 41
    RELOP <oper> (266) 46
    REMOP <oper> (267) 49
    EXPOP <oper> (268) 36 52
    NEGOP <oper> (269) 54
    OROP <oper> (270) 39
    NOTOP <oper> (271) 43
    ARROW (272) 23 31
    BEGIN_ (273) 18
    CASE (274) 31
    CHARACTER (275) 4
    ELSE (276) 24
    END (277) 18
    ENDSWITCH (278) 23
    FUNCTION (279) 2
    INTEGER (280) 3
    IS (281) 8 9 23
    LIST (282) 9
    OF (283) 9
    OTHERS (284) 23
    RETURNS (285) 2
    SWITCH (286) 23
    WHEN (287) 22
    ELSIF (288) 28
    ENDFOLD (289) 25
    ENDCASE (290)
    ENDIF (291) 24
    FOLD (292) 25
    IF (293) 24
    LEFT (294) 32
    REAL (295) 5
    RIGHT (296) 33
    THEN (297) 24 28


Nonterminals, with rules where they appear

    $accept (48)
        on left: 0
    function (49)
        on left: 1
        on right: 0
    function_header (50)
        on left: 2
        on right: 1
    type (51)
        on left: 3 4 5
        on right: 2 8 9 17
    optional_variable (52)
        on left: 6 7
        on right: 1 6
    variable (53)
        on left: 8 9
        on right: 6
    list <list> (54)
        on left: 10
        on right: 9 37
    expressions <list> (55)
        on left: 11 12
        on right: 10 11
    optional_parameter (56)
        on left: 13 14
        on right: 2
    parameters (57)
        on left: 15 16
        on right: 13 15
    parameter (58)
        on left: 17
        on right: 15 16
    body <value> (59)
        on left: 18
        on right: 1
    statement_ <value> (60)
        on left: 19 20
        on right: 18 24 28
    statement <value> (61)
        on left: 21 22 23 24 25
        on right: 8 19 23 31
    elsif_clauses <value> (62)
        on left: 26 27
        on right: 24 26
    elsif_clause <value> (63)
        on left: 28
        on right: 26
    cases <value> (64)
        on left: 29 30
        on right: 23 29
    case <value> (65)
        on left: 31
        on right: 29
    direction <dir> (66)
        on left: 32 33
        on right: 25
    operator <oper> (67)
        on left: 34 35 36
        on right: 25
    list_choice <list> (68)
        on left: 37 38
        on right: 25
    or_condition <value> (69)
        on left: 39 40
        on right: 22 24 28 39 45
    condition <value> (70)
        on left: 41 42
        on right: 39 40 41
    not_condition <value> (71)
        on left: 43 44
        on right: 41 42
    relation <value> (72)
        on left: 45 46
        on right: 43 44
    expression <value> (73)
        on left: 47 48
        on right: 11 12 21 22 23 46 47 56 60
    term <value> (74)
        on left: 49 50 51
        on right: 47 48 49 50
    exp_term <value> (75)
        on left: 52 53
        on right: 49 50 51 52
    neg_term <value> (76)
        on left: 54 55
        on right: 52 53
    primary <value> (77)
        on left: 56 57 58 59 60 61
        on right: 54 55


State 0

    0 $accept: • function $end

    FUNCTION  shift, and go to state 1

    function         go to state 2
    function_header  go to state 3


State 1

    2 function_header: FUNCTION • IDENTIFIER optional_parameter RETURNS type ';'

    IDENTIFIER  shift, and go to state 4


State 2

    0 $accept: function • $end

    $end  shift, and go to state 5


State 3

    1 function: function_header • optional_variable body ';'

    $default  reduce using rule 7 (optional_variable)

    optional_variable  go to state 6


State 4

    2 function_header: FUNCTION IDENTIFIER • optional_parameter RETURNS type ';'

    IDENTIFIER  shift, and go to state 7

    $default  reduce using rule 14 (optional_parameter)

    optional_parameter  go to state 8
    parameters          go to state 9
    parameter           go to state 10


State 5

    0 $accept: function $end •

    $default  accept


State 6

    1 function: function_header optional_variable • body ';'
    6 optional_variable: optional_variable • variable

    IDENTIFIER  shift, and go to state 11
    BEGIN_      shift, and go to state 12

    variable  go to state 13
    body      go to state 14


State 7

   17 parameter: IDENTIFIER • ':' type

    ':'  shift, and go to state 15


State 8

    2 function_header: FUNCTION IDENTIFIER optional_parameter • RETURNS type ';'

    RETURNS  shift, and go to state 16


State 9

   13 optional_parameter: parameters •
   15 parameters: parameters • ',' parameter

    ','  shift, and go to state 17

    $default  reduce using rule 13 (optional_parameter)


State 10

   16 parameters: parameter •

    $default  reduce using rule 16 (parameters)


State 11

    8 variable: IDENTIFIER • ':' type IS statement ';'
    9         | IDENTIFIER • ':' LIST OF type IS list ';'

    ':'  shift, and go to state 18


State 12

   18 body: BEGIN_ • statement_ END

    error         shift, and go to state 19
    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    SWITCH        shift, and go to state 25
    WHEN          shift, and go to state 26
    FOLD          shift, and go to state 27
    IF            shift, and go to state 28
    '('           shift, and go to state 29

    statement_  go to state 30
    statement   go to state 31
    expression  go to state 32
    term        go to state 33
    exp_term    go to state 34
    neg_term    go to state 35
    primary     go to state 36


State 13

    6 optional_variable: optional_variable variable •

    $default  reduce using rule 6 (optional_variable)


State 14

    1 function: function_header optional_variable body • ';'

    ';'  shift, and go to state 37


State 15

   17 parameter: IDENTIFIER ':' • type

    CHARACTER  shift, and go to state 38
    INTEGER    shift, and go to state 39
    REAL       shift, and go to state 40

    type  go to state 41


State 16

    2 function_header: FUNCTION IDENTIFIER optional_parameter RETURNS • type ';'

    CHARACTER  shift, and go to state 38
    INTEGER    shift, and go to state 39
    REAL       shift, and go to state 40

    type  go to state 42


State 17

   15 parameters: parameters ',' • parameter

    IDENTIFIER  shift, and go to state 7

    parameter  go to state 43


State 18

    8 variable: IDENTIFIER ':' • type IS statement ';'
    9         | IDENTIFIER ':' • LIST OF type IS list ';'

    CHARACTER  shift, and go to state 38
    INTEGER    shift, and go to state 39
    LIST       shift, and go to state 44
    REAL       shift, and go to state 40

    type  go to state 45


State 19

   20 statement_: error • ';'

    ';'  shift, and go to state 46


State 20

   60 primary: IDENTIFIER • '(' expression ')'
   61        | IDENTIFIER •

    '('  shift, and go to state 47

    $default  reduce using rule 61 (primary)


State 21

   57 primary: INT_LITERAL •

    $default  reduce using rule 57 (primary)


State 22

   58 primary: CHAR_LITERAL •

    $default  reduce using rule 58 (primary)


State 23

   59 primary: REAL_LITERAL •

    $default  reduce using rule 59 (primary)


State 24

   54 neg_term: NEGOP • primary

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    '('           shift, and go to state 29

    primary  go to state 48


State 25

   23 statement: SWITCH • expression IS cases OTHERS ARROW statement ';' ENDSWITCH

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 29

    expression  go to state 49
    term        go to state 33
    exp_term    go to state 34
    neg_term    go to state 35
    primary     go to state 36


State 26

   22 statement: WHEN • or_condition ',' expression ':' expression

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    NOTOP         shift, and go to state 50
    '('           shift, and go to state 51

    or_condition   go to state 52
    condition      go to state 53
    not_condition  go to state 54
    relation       go to state 55
    expression     go to state 56
    term           go to state 33
    exp_term       go to state 34
    neg_term       go to state 35
    primary        go to state 36


State 27

   25 statement: FOLD • direction operator list_choice ENDFOLD

    LEFT   shift, and go to state 57
    RIGHT  shift, and go to state 58

    direction  go to state 59


State 28

   24 statement: IF • or_condition THEN statement_ elsif_clauses ELSE statement_ ENDIF

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    NOTOP         shift, and go to state 50
    '('           shift, and go to state 51

    or_condition   go to state 60
    condition      go to state 53
    not_condition  go to state 54
    relation       go to state 55
    expression     go to state 56
    term           go to state 33
    exp_term       go to state 34
    neg_term       go to state 35
    primary        go to state 36


State 29

   56 primary: '(' • expression ')'

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 29

    expression  go to state 61
    term        go to state 33
    exp_term    go to state 34
    neg_term    go to state 35
    primary     go to state 36


State 30

   18 body: BEGIN_ statement_ • END

    END  shift, and go to state 62


State 31

   19 statement_: statement • ';'

    ';'  shift, and go to state 63


State 32

   21 statement: expression •
   47 expression: expression • ADDOP term

    ADDOP  shift, and go to state 64

    $default  reduce using rule 21 (statement)


State 33

   48 expression: term •
   49 term: term • REMOP exp_term
   50     | term • MULOP exp_term

    MULOP  shift, and go to state 65
    REMOP  shift, and go to state 66

    $default  reduce using rule 48 (expression)


State 34

   51 term: exp_term •

    $default  reduce using rule 51 (term)


State 35

   52 exp_term: neg_term • EXPOP exp_term
   53         | neg_term •

    EXPOP  shift, and go to state 67

    $default  reduce using rule 53 (exp_term)


State 36

   55 neg_term: primary •

    $default  reduce using rule 55 (neg_term)


State 37

    1 function: function_header optional_variable body ';' •

    $default  reduce using rule 1 (function)


State 38

    4 type: CHARACTER •

    $default  reduce using rule 4 (type)


State 39

    3 type: INTEGER •

    $default  reduce using rule 3 (type)


State 40

    5 type: REAL •

    $default  reduce using rule 5 (type)


State 41

   17 parameter: IDENTIFIER ':' type •

    $default  reduce using rule 17 (parameter)


State 42

    2 function_header: FUNCTION IDENTIFIER optional_parameter RETURNS type • ';'

    ';'  shift, and go to state 68


State 43

   15 parameters: parameters ',' parameter •

    $default  reduce using rule 15 (parameters)


State 44

    9 variable: IDENTIFIER ':' LIST • OF type IS list ';'

    OF  shift, and go to state 69


State 45

    8 variable: IDENTIFIER ':' type • IS statement ';'

    IS  shift, and go to state 70


State 46

   20 statement_: error ';' •

    $default  reduce using rule 20 (statement_)


State 47

   60 primary: IDENTIFIER '(' • expression ')'

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 29

    expression  go to state 71
    term        go to state 33
    exp_term    go to state 34
    neg_term    go to state 35
    primary     go to state 36


State 48

   54 neg_term: NEGOP primary •

    $default  reduce using rule 54 (neg_term)


State 49

   23 statement: SWITCH expression • IS cases OTHERS ARROW statement ';' ENDSWITCH
   47 expression: expression • ADDOP term

    ADDOP  shift, and go to state 64
    IS     shift, and go to state 72


State 50

   43 not_condition: NOTOP • relation

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 51

    relation    go to state 73
    expression  go to state 56
    term        go to state 33
    exp_term    go to state 34
    neg_term    go to state 35
    primary     go to state 36


State 51

   45 relation: '(' • or_condition ')'
   56 primary: '(' • expression ')'

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    NOTOP         shift, and go to state 50
    '('           shift, and go to state 51

    or_condition   go to state 74
    condition      go to state 53
    not_condition  go to state 54
    relation       go to state 55
    expression     go to state 75
    term           go to state 33
    exp_term       go to state 34
    neg_term       go to state 35
    primary        go to state 36


State 52

   22 statement: WHEN or_condition • ',' expression ':' expression
   39 or_condition: or_condition • OROP condition

    OROP  shift, and go to state 76
    ','   shift, and go to state 77


State 53

   40 or_condition: condition •
   41 condition: condition • ANDOP not_condition

    ANDOP  shift, and go to state 78

    $default  reduce using rule 40 (or_condition)


State 54

   42 condition: not_condition •

    $default  reduce using rule 42 (condition)


State 55

   44 not_condition: relation •

    $default  reduce using rule 44 (not_condition)


State 56

   46 relation: expression • RELOP expression
   47 expression: expression • ADDOP term

    ADDOP  shift, and go to state 64
    RELOP  shift, and go to state 79


State 57

   32 direction: LEFT •

    $default  reduce using rule 32 (direction)


State 58

   33 direction: RIGHT •

    $default  reduce using rule 33 (direction)


State 59

   25 statement: FOLD direction • operator list_choice ENDFOLD

    ADDOP  shift, and go to state 80
    MULOP  shift, and go to state 81
    EXPOP  shift, and go to state 82

    operator  go to state 83


State 60

   24 statement: IF or_condition • THEN statement_ elsif_clauses ELSE statement_ ENDIF
   39 or_condition: or_condition • OROP condition

    OROP  shift, and go to state 76
    THEN  shift, and go to state 84


State 61

   47 expression: expression • ADDOP term
   56 primary: '(' expression • ')'

    ADDOP  shift, and go to state 64
    ')'    shift, and go to state 85


State 62

   18 body: BEGIN_ statement_ END •

    $default  reduce using rule 18 (body)


State 63

   19 statement_: statement ';' •

    $default  reduce using rule 19 (statement_)


State 64

   47 expression: expression ADDOP • term

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 29

    term      go to state 86
    exp_term  go to state 34
    neg_term  go to state 35
    primary   go to state 36


State 65

   50 term: term MULOP • exp_term

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 29

    exp_term  go to state 87
    neg_term  go to state 35
    primary   go to state 36


State 66

   49 term: term REMOP • exp_term

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 29

    exp_term  go to state 88
    neg_term  go to state 35
    primary   go to state 36


State 67

   52 exp_term: neg_term EXPOP • exp_term

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 29

    exp_term  go to state 89
    neg_term  go to state 35
    primary   go to state 36


State 68

    2 function_header: FUNCTION IDENTIFIER optional_parameter RETURNS type ';' •

    $default  reduce using rule 2 (function_header)


State 69

    9 variable: IDENTIFIER ':' LIST OF • type IS list ';'

    CHARACTER  shift, and go to state 38
    INTEGER    shift, and go to state 39
    REAL       shift, and go to state 40

    type  go to state 90


State 70

    8 variable: IDENTIFIER ':' type IS • statement ';'

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    SWITCH        shift, and go to state 25
    WHEN          shift, and go to state 26
    FOLD          shift, and go to state 27
    IF            shift, and go to state 28
    '('           shift, and go to state 29

    statement   go to state 91
    expression  go to state 32
    term        go to state 33
    exp_term    go to state 34
    neg_term    go to state 35
    primary     go to state 36


State 71

   47 expression: expression • ADDOP term
   60 primary: IDENTIFIER '(' expression • ')'

    ADDOP  shift, and go to state 64
    ')'    shift, and go to state 92


State 72

   23 statement: SWITCH expression IS • cases OTHERS ARROW statement ';' ENDSWITCH

    $default  reduce using rule 30 (cases)

    cases  go to state 93


State 73

   43 not_condition: NOTOP relation •

    $default  reduce using rule 43 (not_condition)


State 74

   39 or_condition: or_condition • OROP condition
   45 relation: '(' or_condition • ')'

    OROP  shift, and go to state 76
    ')'   shift, and go to state 94


State 75

   46 relation: expression • RELOP expression
   47 expression: expression • ADDOP term
   56 primary: '(' expression • ')'

    ADDOP  shift, and go to state 64
    RELOP  shift, and go to state 79
    ')'    shift, and go to state 85


State 76

   39 or_condition: or_condition OROP • condition

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    NOTOP         shift, and go to state 50
    '('           shift, and go to state 51

    condition      go to state 95
    not_condition  go to state 54
    relation       go to state 55
    expression     go to state 56
    term           go to state 33
    exp_term       go to state 34
    neg_term       go to state 35
    primary        go to state 36


State 77

   22 statement: WHEN or_condition ',' • expression ':' expression

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 29

    expression  go to state 96
    term        go to state 33
    exp_term    go to state 34
    neg_term    go to state 35
    primary     go to state 36


State 78

   41 condition: condition ANDOP • not_condition

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    NOTOP         shift, and go to state 50
    '('           shift, and go to state 51

    not_condition  go to state 97
    relation       go to state 55
    expression     go to state 56
    term           go to state 33
    exp_term       go to state 34
    neg_term       go to state 35
    primary        go to state 36


State 79

   46 relation: expression RELOP • expression

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 29

    expression  go to state 98
    term        go to state 33
    exp_term    go to state 34
    neg_term    go to state 35
    primary     go to state 36


State 80

   34 operator: ADDOP •

    $default  reduce using rule 34 (operator)


State 81

   35 operator: MULOP •

    $default  reduce using rule 35 (operator)


State 82

   36 operator: EXPOP •

    $default  reduce using rule 36 (operator)


State 83

   25 statement: FOLD direction operator • list_choice ENDFOLD

    IDENTIFIER  shift, and go to state 99
    '('         shift, and go to state 100

    list         go to state 101
    list_choice  go to state 102


State 84

   24 statement: IF or_condition THEN • statement_ elsif_clauses ELSE statement_ ENDIF

    error         shift, and go to state 19
    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    SWITCH        shift, and go to state 25
    WHEN          shift, and go to state 26
    FOLD          shift, and go to state 27
    IF            shift, and go to state 28
    '('           shift, and go to state 29

    statement_  go to state 103
    statement   go to state 31
    expression  go to state 32
    term        go to state 33
    exp_term    go to state 34
    neg_term    go to state 35
    primary     go to state 36


State 85

   56 primary: '(' expression ')' •

    $default  reduce using rule 56 (primary)


State 86

   47 expression: expression ADDOP term •
   49 term: term • REMOP exp_term
   50     | term • MULOP exp_term

    MULOP  shift, and go to state 65
    REMOP  shift, and go to state 66

    $default  reduce using rule 47 (expression)


State 87

   50 term: term MULOP exp_term •

    $default  reduce using rule 50 (term)


State 88

   49 term: term REMOP exp_term •

    $default  reduce using rule 49 (term)


State 89

   52 exp_term: neg_term EXPOP exp_term •

    $default  reduce using rule 52 (exp_term)


State 90

    9 variable: IDENTIFIER ':' LIST OF type • IS list ';'

    IS  shift, and go to state 104


State 91

    8 variable: IDENTIFIER ':' type IS statement • ';'

    ';'  shift, and go to state 105


State 92

   60 primary: IDENTIFIER '(' expression ')' •

    $default  reduce using rule 60 (primary)


State 93

   23 statement: SWITCH expression IS cases • OTHERS ARROW statement ';' ENDSWITCH
   29 cases: cases • case

    CASE    shift, and go to state 106
    OTHERS  shift, and go to state 107

    case  go to state 108


State 94

   45 relation: '(' or_condition ')' •

    $default  reduce using rule 45 (relation)


State 95

   39 or_condition: or_condition OROP condition •
   41 condition: condition • ANDOP not_condition

    ANDOP  shift, and go to state 78

    $default  reduce using rule 39 (or_condition)


State 96

   22 statement: WHEN or_condition ',' expression • ':' expression
   47 expression: expression • ADDOP term

    ADDOP  shift, and go to state 64
    ':'    shift, and go to state 109


State 97

   41 condition: condition ANDOP not_condition •

    $default  reduce using rule 41 (condition)


State 98

   46 relation: expression RELOP expression •
   47 expression: expression • ADDOP term

    ADDOP  shift, and go to state 64

    $default  reduce using rule 46 (relation)


State 99

   38 list_choice: IDENTIFIER •

    $default  reduce using rule 38 (list_choice)


State 100

   10 list: '(' • expressions ')'

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 29

    expressions  go to state 110
    expression   go to state 111
    term         go to state 33
    exp_term     go to state 34
    neg_term     go to state 35
    primary      go to state 36


State 101

   37 list_choice: list •

    $default  reduce using rule 37 (list_choice)


State 102

   25 statement: FOLD direction operator list_choice • ENDFOLD

    ENDFOLD  shift, and go to state 112


State 103

   24 statement: IF or_condition THEN statement_ • elsif_clauses ELSE statement_ ENDIF

    $default  reduce using rule 27 (elsif_clauses)

    elsif_clauses  go to state 113


State 104

    9 variable: IDENTIFIER ':' LIST OF type IS • list ';'

    '('  shift, and go to state 100

    list  go to state 114


State 105

    8 variable: IDENTIFIER ':' type IS statement ';' •

    $default  reduce using rule 8 (variable)


State 106

   31 case: CASE • INT_LITERAL ARROW statement ';'

    INT_LITERAL  shift, and go to state 115


State 107

   23 statement: SWITCH expression IS cases OTHERS • ARROW statement ';' ENDSWITCH

    ARROW  shift, and go to state 116


State 108

   29 cases: cases case •

    $default  reduce using rule 29 (cases)


State 109

   22 statement: WHEN or_condition ',' expression ':' • expression

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 29

    expression  go to state 117
    term        go to state 33
    exp_term    go to state 34
    neg_term    go to state 35
    primary     go to state 36


State 110

   10 list: '(' expressions • ')'
   11 expressions: expressions • ',' expression

    ')'  shift, and go to state 118
    ','  shift, and go to state 119


State 111

   12 expressions: expression •
   47 expression: expression • ADDOP term

    ADDOP  shift, and go to state 64

    $default  reduce using rule 12 (expressions)


State 112

   25 statement: FOLD direction operator list_choice ENDFOLD •

    $default  reduce using rule 25 (statement)


State 113

   24 statement: IF or_condition THEN statement_ elsif_clauses • ELSE statement_ ENDIF
   26 elsif_clauses: elsif_clauses • elsif_clause

    ELSE   shift, and go to state 120
    ELSIF  shift, and go to state 121

    elsif_clause  go to state 122


State 114

    9 variable: IDENTIFIER ':' LIST OF type IS list • ';'

    ';'  shift, and go to state 123


State 115

   31 case: CASE INT_LITERAL • ARROW statement ';'

    ARROW  shift, and go to state 124


State 116

   23 statement: SWITCH expression IS cases OTHERS ARROW • statement ';' ENDSWITCH

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    SWITCH        shift, and go to state 25
    WHEN          shift, and go to state 26
    FOLD          shift, and go to state 27
    IF            shift, and go to state 28
    '('           shift, and go to state 29

    statement   go to state 125
    expression  go to state 32
    term        go to state 33
    exp_term    go to state 34
    neg_term    go to state 35
    primary     go to state 36


State 117

   22 statement: WHEN or_condition ',' expression ':' expression •
   47 expression: expression • ADDOP term

    ADDOP  shift, and go to state 64

    $default  reduce using rule 22 (statement)


State 118

   10 list: '(' expressions ')' •

    $default  reduce using rule 10 (list)


State 119

   11 expressions: expressions ',' • expression

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 29

    expression  go to state 126
    term        go to state 33
    exp_term    go to state 34
    neg_term    go to state 35
    primary     go to state 36


State 120

   24 statement: IF or_condition THEN statement_ elsif_clauses ELSE • statement_ ENDIF

    error         shift, and go to state 19
    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    SWITCH        shift, and go to state 25
    WHEN          shift, and go to state 26
    FOLD          shift, and go to state 27
    IF            shift, and go to state 28
    '('           shift, and go to state 29

    statement_  go to state 127
    statement   go to state 31
    expression  go to state 32
    term        go to state 33
    exp_term    go to state 34
    neg_term    go to state 35
    primary     go to state 36


State 121

   28 elsif_clause: ELSIF • or_condition THEN statement_

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    NOTOP         shift, and go to state 50
    '('           shift, and go to state 51

    or_condition   go to state 128
    condition      go to state 53
    not_condition  go to state 54
    relation       go to state 55
    expression     go to state 56
    term           go to state 33
    exp_term       go to state 34
    neg_term       go to state 35
    primary        go to state 36


State 122

   26 elsif_clauses: elsif_clauses elsif_clause •

    $default  reduce using rule 26 (elsif_clauses)


State 123

    9 variable: IDENTIFIER ':' LIST OF type IS list ';' •

    $default  reduce using rule 9 (variable)


State 124

   31 case: CASE INT_LITERAL ARROW • statement ';'

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    SWITCH        shift, and go to state 25
    WHEN          shift, and go to state 26
    FOLD          shift, and go to state 27
    IF            shift, and go to state 28
    '('           shift, and go to state 29

    statement   go to state 129
    expression  go to state 32
    term        go to state 33
    exp_term    go to state 34
    neg_term    go to state 35
    primary     go to state 36


State 125

   23 statement: SWITCH expression IS cases OTHERS ARROW statement • ';' ENDSWITCH

    ';'  shift, and go to state 130


State 126

   11 expressions: expressions ',' expression •
   47 expression: expression • ADDOP term

    ADDOP  shift, and go to state 64

    $default  reduce using rule 11 (expressions)


State 127

   24 statement: IF or_condition THEN statement_ elsif_clauses ELSE statement_ • ENDIF

    ENDIF  shift, and go to state 131


State 128

   28 elsif_clause: ELSIF or_condition • THEN statement_
   39 or_condition: or_condition • OROP condition

    OROP  shift, and go to state 76
    THEN  shift, and go to state 132


State 129

   31 case: CASE INT_LITERAL ARROW statement • ';'

    ';'  shift, and go to state 133


State 130

   23 statement: SWITCH expression IS cases OTHERS ARROW statement ';' • ENDSWITCH

    ENDSWITCH  shift, and go to state 134


State 131

   24 statement: IF or_condition THEN statement_ elsif_clauses ELSE statement_ ENDIF •

    $default  reduce using rule 24 (statement)


State 132

   28 elsif_clause: ELSIF or_condition THEN • statement_

    error         shift, and go to state 19
    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    SWITCH        shift, and go to state 25
    WHEN          shift, and go to state 26
    FOLD          shift, and go to state 27
    IF            shift, and go to state 28
    '('           shift, and go to state 29

    statement_  go to state 135
    statement   go to state 31
    expression  go to state 32
    term        go to state 33
    exp_term    go to state 34
    neg_term    go to state 35
    primary     go to state 36


State 133

   31 case: CASE INT_LITERAL ARROW statement ';' •

    $default  reduce using rule 31 (case)


State 134

   23 statement: SWITCH expression IS cases OTHERS ARROW statement ';' ENDSWITCH •

    $default  reduce using rule 23 (statement)


State 135

   28 elsif_clause: ELSIF or_condition THEN statement_ •

    $default  reduce using rule 28 (elsif_clause)
